{?set %encoding=utf-8}
{document
  {title Release note - ABS 3.3}
  {reference fd8b7d0}
  {author %%Sebastien DEVAUX}
  {copyright %year=2020-2023 %holder=SÃ©bastien DEVAUX / ArianGroup SAS}
  {abstract ABS release note. Acrobatomatic Build System is a generic software project build tool. It is first based on make files a few shell script helpers. Any project following the proposed default directory layout should be compatible with ABS.}
  {keywords release, configuration, version, ABS, build scripts, make, executable generation}
  {history
    {edition %version=3.3 %date=2023-02-20 %%Release abs-3.3}
    {edition %version=3.2 %date=2020-06-15 %%Release abs-3.2}
    {edition %version=3.1 %date=2020-11-28 %%Release abs-3.1}
    {edition %version=3.0 %date=2020-03-03 %%Release abs-3.0}
    {edition %%For ArianeGroup users, some preliminary ABS releases were configuration managed and released integrated with the first internal project using it. The internal document reference was RD_TEA332-1618}
  }
{section %title=Product identification
  {table
{?table %fields=th,td
Product name % Acrobatomatic Build System (ABS)
Version % abs-3.3
Parent version % abs-3.2.13
repository URL % https://github.com/seeduvax/AcrobatomaticBuildSystem.git
Tag % abs-3.3.21
Tracking Issue % 9b2cb58
}
  }
}
{section %title=References
  {definitions %title=Glossary
     {def %entry=Astre %%Advanced Simulation Technology Roadmap and Expertise}
     {def %entry=ABS %%Acrobatomatic Build System.}
     {def %entry=XML %%Extensible markup language}
     {def %entry=MIT %%Massachusetts Institute of Technology. In this document: the software license first created for the X/Windows system and today used by many free software projects.}
     {def %entry=GPL %%GNU Public License}
     {def %entry=GNU %%GNU's not Unix. Frees software project aiming at  providing a full featured POSIX operating system and many applications.}
     {def %entry=POSIX %%Portable operating system interface (for unix)}
     {def %entry=LGPL %%Lesser GNU Public License}
     {def %entry=HTML %%Hypertext markup language}
     {def %entry=PDF %%Portable document format}
     {def %entry=URL %%Uniform resource locator}
     {def %entry=BSD %%Berkeley software distribution}
  }
  {section %title=Documentation
{table
 {tr
  {th Type}{th Reference}{th Edition}{th Title}
 }
{?table
Software Definition File % 170983b % 4, 2023-02-17 % Acrobatomatic Build System - generic make files and companion scripts
Software Executable Generation Procedure % % % See dedicated section in this document
Software Installation Procedure % % % See dedicated section in this document
Software Release Document % % % This document
}
}
Software Definition file includes:
  - software requirements specification
  - user manual
  - design
  - test plan
    }
}
{section %title=Product environment
  {section %title=License
Acrobatomatic Build System is released under a BSD license. See LICENSE file included in the source file tree for the exact license definition. This licensing policy does not involve any constraint nor restriction on projects using ABS as is or with modifications.
This software is provided by the copyright holders and contributors "as is" and any express or implied warranties, including, but not limited to, the imploed warranties of merchantability and fitness for a particular purpose are disclamed.
See the license file for the complete disclamer.
  }
  {section %title=Tools
No specific tooling is needed to maintain ABS. Make files, and shell scripts are ASCII files and any text editor can be used to edit any file. Prefer editors with advanced programming features like syntax highlighting to edit efficiently those files.
  }
  {section %title=Dependencies
ABS handles software project build process and was originally designed fro GNU/Linux systems but has demonstrated capabilities for any Posix like system including windows with the help of posix compatibility tools such as Cygwin or MinGW. ABS is currently validated with the following systems:
  - Debian Linux 10
  - Debian Linux 11
  - Raspberry Pi OS 10

Some feedback was reported of use with:
  - Windows 10/Cygwin
  - Raspberry Pi OS 9
  - SUSE Linux 12
  - Android within termux application.

But those configurations may experience more trouble since are not include in the formal test process.
{table
{tr
 {th Tool}{th Version}{th License}{th Comments}
}
{?table
GNU make % 3.81 or next % GPL % 
gcc % 4.1 or next % GPL % 
bash % 3.2.25 or next % GPL % 
wget % 1.11.14 or next % GPL % 
Java SDK % JDK 1.2 or next % Supplier dependent % Optional, for java support only, any implementation supplying the javac command should work.
cppunit % 1.12.1 % LGPL 2.1 % Included in buildscript's external libraries packaging.
xsltproc % libxml 20626, libxslt 10117 or next % MIT % 
GNU tar % 1.11.4 or next % GPL % Any tar implementation support the z switch for file compression should be compatible.
OpenSSH % 4.3 or next % BSD % Any ssh and scp commands implementation should be compatible.
GNU m4 % 1.4.5 or next % GPL V3 % 
Doxygen % 1.6.1 or next % GPL V2.0 % 
subversion % 1.6 or next % Apache V2.0 % 
git % 2.0 or next % GPL 2.0 % 
curl % 7.19.7 or next % MIT % Optional, wget may be used as a replacement for most HTTP related functions.
Graphviz (dot) % 2.38.0 or next % Eclipse Public License % Optional, for checkdep target only
}
}
About the use of GPL licensed products: ABS does not link itself with any product, it runs some GPL product through commands as a human user can do using an interactive shell. Then ABS can't be considered as a derivate product and GPL is not applicable to ABS itself.
  }
}
{section %title=Changes tracking
  {section %title=Applied changes
{table
{tr
 {th Id}{th State}{th Summary}
}
{?table
fa5acdb % closed % Profiling tools
22359d2 % closed % cppunit library no longer builds.
b97ed27 % closed % add lua abs packager.
a6e15ac % closed % add tracy abs packager
30875d1 % closed % TestSummary macro not working on cint target which requires release MOD
333ef11 % closed % Adapt charm hook installation rules in case where project doesnt container .git folder
bcd1cea % closed % Package 2 absext modules
aebaf2d % closed % VHDL library handling
4856f49 % closed % TBC/TBD sentances are not properly line wrapped when rendiring heml doc in pdf.
0f19eb6 % closed % Test report generator and styling
1c883c3 % closed % Unit test report no more readable by jenkins
40dcbef % closed % Starting from debian 10, no more background color in table of pdf generated from heml.
2c10b82 % closed % Symbolic links in fileset modules are not copied to build target
26a751b % closed % The editions table contains sentence "-0.5cm" when compiling heml doc on debian9
2151768 % closed % SCM type detection not working when project root does not match the workspace/local repository/local copy root
0254625 % closed % upward traceability for requirements in heml docs
c4bd4d7 % closed % Force single heml doc helper
9ab0aaa % closed % Cannot publish compilation result because cannot find dist or distinstall
a94308d % closed % Profiling with easy-profiler leads to override LINKLIB variable.
78442c3 % closed % Java compilation not working on windows/cygwin
b82a282 % closed % git hooks shall be stackable
2d904a8 % closed % charm CR commit timestamping does not work after CR edit.
026fb50 % closed % build chain package support
2d25998 % closed % profilng with easy profiler needs to be explicitely started and stopped
17d63bf % closed % Python support broken with python 3
27f5d96 % closed % HEML doc: enable use of section in check and procedure elements
2949521 % closed % cint target shall defaultly no longer include pubdist for non tagged workspace
575d893 % closed % Equation support in heml docs
f9fefc8 % closed % error on local.cfg donwload attempt when invoking make dist on abs project itself.
67c8595 % closed % JUnit features not working from windows/cygwin
9bc09c6 % closed % install script shall include and check signature of embedded tar before trying installation.
1be57e3 % closed % Test case requirement coverage and traceability helpers
34a59d3 % closed % TestXXX target to run one JUnit class does not work anymore
54a47e9 % closed % ABS_PRINT level filtering
9a99a92 % closed % Generate compile_commands.json at PRJROOT (used for clangd daemon, for modern editors like VSCode)
522e55b % closed % Update default Python version to 3 as Python 2 is deprecated since 1/1/2020
744cf90 % closed % percent char in heml doc attribute makes pdf rendering fail
dc32bb0 % closed % HTML rendering of the summary of heml doc is broken
0e2c238 % closed % default to read-only extlib dir
5299b80 % closed % Charm post commit hook no more running with freshly created workspace
a2506c3 % closed % Dist abs module into a single package
f4062c4 % closed % Long requirement identifiers are trunkated in pdf output.
c687dee % closed % Enable user define dist repo layout
480c6aa % closed % Java package handling issues on make dist with cygwin
8bcf1b2 % closed % Do not commit local uncommited changes on tag
d840bd0 % closed % ABS 3.3 test report
}
}
  }
  {section %title=Issues not fixed
None
  }
  {section %title=Known limitations
None
  }
}
{section %title=Executable generation procedure
ABS is a tool providing a generic generation system for other software projects. It is a collection of make files and shell scripts and is not really built as itself. See ABS's documentation for information about how to setup a project to use ABS.
However, archive files shall be deployed on a repository. Here is the procedure to generate the packages:
  - clone ABS from the git repository (optional when you already have your own clone), and checkout the ABS release you need (replace {kw X.Y.Z} by the right ABS version).
{code %language=sh
{!git clone https://github.com/seeduvax/AcrobatomaticBuildSystem.git
cd AcorbatomaticBuildSystem
git checkout abs-X.Y.Z!}
}
  - build the packages
{code %language=sh
{!make dist!}
}
}
{section %title=Installation procedure
ABS is self downloaded by the projects using it. To let this happen, the archive files generated with the procedure detailed in the previous section, have to be put in the storage location behind the first URL you request your users to set in the {kw ABS_REPO} variable of the projects' configuration file. To do so, assuming you're still in the location of your ABS clone:
  - copy the generated packages to your repository, assuming {kw <reporoot>} is the root of the repository locally reachable from the host you are using for the build (alternatively, use your preferred file transfer mean when your repository is stored elsewhere).
{code %language=sh
{!mkdir -p <reporoot>/noarch
cp dist/*.tar.gz <reporoot>/noarch/!}
}
  - eventually, for your user projects convenience and let them identify only the partial {kw X.Y} version identifier, create symbolic links for each ABS package, for instance for the core package:
{code %language=sh
{!cd <reporoot>/noarch
ln -sf abs.core-X.Y.Z.tar.gz abs.core-X.Y.tar.gz!}
}
  - Then, tell your users the new version of ABS is available to let them update VABS (if needed) in their projects' configuration file and perform a refresh ({kw make cleanabs}). 
}
{section %title=Product classification
  {section %title=Impacted Source Code
{table
{tr
 {th %w=1 %%Change}{th %w=10 %%File path}
}
{?table %src=../build/scm/diff.txt}
}
  }
  {section %title=Detailed changes log
    {include %src=../build/scm/log.xml}
  }
  {section %title=Product Sources
{table %type=wide
{tr
 {th Path}{th commit}{th git object id}
}
{?table %src=../build/scm/file-list.txt}
}
  }
}
}
